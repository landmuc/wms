[versions]
agp = "8.4.1"
supabaseBom = "2.4.3"
kotlin = "2.0.0"
coreKtx = "1.13.1"
junit = "4.13.2"
junitVersion = "1.1.5"
espressoCore = "3.5.1"
lifecycleRuntimeKtx = "2.8.1"
activityCompose = "1.9.0"
composeBom = "2024.05.00"
jetbrainsKotlinJvm = "2.0.0"
appcompat = "1.7.0"
material = "1.12.0"
androidxLifecycle = "2.8.1"
androidTools = "31.4.0"
koinBom = "3.5.6"
ktor = "2.3.11"

[libraries]
##
# androidx-core-ktx:Provides Kotlin extensions for core Android functionalities
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
# androidx-lifecycle-runtime-ktx: Kotlin extensions for managing the lifecycle of composables
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
# androidx-activity-compose: Enables integration between Jetpack Compose and Activities
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
#
androidx-lifecycle-runtimeCompose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidxLifecycle" }

## Jetpack Compose & Material 3
# androidx-compose-bom: Bill of Materials (BOM) for Jetpack Compose, manages dependeny versions
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
# androidx-ui: Core foundation for building UI with Jetpack Compose
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
# androidx-ui-graphics: Provides UI graphics funtionalities for Compose
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
# android-ui-tooling: Tools for developing and inspecting Compose UI
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
# androidx-ui-tooling-preview: Enables previewing composables in Android Studio
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
# androidx-ui-test-manifest: AndroidManifest.xml configuration for Compose UI tests
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
# androidx-ui-test-junit4: JUnit4 runner for testing Compose UI
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
# androidx-material3: Material Design 3 components for Compose
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
# androidx-compose-runtime: Core foundation for building Compose UI
androidx-compose-runtime = { group = "androidx.compose.runtime", name = "runtime"}

## Supabase
supabase-bom = { module = "io.github.jan-tennert.supabase:bom", version.ref = "supabaseBom" }
supabase-postgrest-kt = { module = "io.github.jan-tennert.supabase:postgrest-kt"}
supabase-realtime-kt = { module = "io.github.jan-tennert.supabase:realtime-kt"}
supabase-gotrue-kt = { module = "io.github.jan-tennert.supabase:gotrue-kt"}
supabase-compose-auth = { module = "io.github.jan-tennert.supabase:compose-auth"}
supabase-compose-auth-ui = { module = "io.github.jan-tennert.supabase:compose-auth-ui"}

## Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor"}
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor"}
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

## Koin
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koinBom" }
koin-core = { module = "io.insert-koin:koin-core" }
koin-android = { module = "io.insert-koin:koin-android" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose" }
koin-ktor = { module = "io.insert-koin:koin-ktor" }

##
# androidx-appcompat: This library provides compatibility features for older Android APIs on newer versions. It's generally not required for Jetpack Compose projects since Compose targets newer APIs.
# This library was automatically added on the first app launch
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
# material: Material Design components for building UIs.
# This library was automatically added on the first app launch
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

## Testing
# junit: The core JUnit framework for writing unit tests
junit = { group = "junit", name = "junit", version.ref = "junit" }
# androidx-junit: JUnit runner and extensions for Android testing
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
# androidx-espresso-core: UI testing with Espresso
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }

## build-logic
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
#compose-gradlePlugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
#android-tools-common = { group = "com.android.tools", name = "common", version.ref = "androidTools" }

[bundles]
compose = ["androidx-ui", "androidx-ui-graphics", "androidx-ui-tooling-preview", "androidx-material3", "androidx-compose-runtime"]

[plugins]
android-library = { id = "com.android.library", version.ref = "agp" }
# android-application: Plugin to configure an Android application project
android-application = { id = "com.android.application", version.ref = "agp" }
# jetbrains-kotlin-android: Plugin to enable Kotlin support for Android development
jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
# compose-compiler: Plugin for compiling Compose code
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin"}
# jetbrains-kotlin-jvm: Plugin for enabling JVM support for Kotlin code
#jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin"}

## convention plugins
wms-android-library = { id = "wms.android.library", version = "unspecified"}
wms-android-library-compose = { id = "wms.android.library.compose", version = "unspecified"}
wms-android-application = { id = "wms.android.application", version = "unspecified"}
wms-android-application-compose = { id = "wms.android.application.compose", version = "unspecified"}
wms-android-feature = { id = "wms.android.feature", version = "unspecified"}
wms-android-koin = { id = "wms.android.koin", version = "unspecified"}
